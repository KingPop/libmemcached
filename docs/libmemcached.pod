=head1 NAME

libmemcached - Client library for memcached

=head1 LIBRARY

C Client Library for memcached (libmemcached, -lmemcached)

=head1 SYNOPSIS

#include <memcached.h>

=head1 DESCRIPTION

"Memcached is a high-performance, distributed memory object caching
system, generic in nature, but intended for use in speeding up dynamic web
applications by alleviating database load." (http://danga.com/memcached/)

libmemcached has the aim of being a small, thread safe client library for
memcached. The code has all been written with an eye to allow for both web
and embedded usage. It handles the work behind route particular keys to
specifc servers that you specify (and values are matched based on server
order as supplied by you). See more about this via X.

The aim is to support multiple routing and hashing methods. Currently only
two hashing methods are supported, a built quick routine, and MD5. For
routing a simple modulous method is used currently.

All operations are performance against memcached_st structure. These
can either be dynamically allocated or statically allocated and initializd
by memcached_create(3). Functions have been written in order to encapsulate
the memcached_st (it is not recommended that you operate directly against
the structure). 

Nearly all functions return a memcached_return value. This is documented in
memcached_strerr(3).

memcached_st structures are thread safe, but each thread must contain its own structure (aka if you want to share these among threads you must provide your own locking). No global variables are used in this library.

Some features of the library must be enabled through memcached_behavior_set(3). 
Hope you enjoy it!


=head1 HOME

To find out more information please check: http://tangent.org/552/libmemcached.html

=head1 AUTHOR

Brian Aker, brian@tangent.org

=head1 SEE ALSO

memcached(1) libmemcached_examples(3) libmemcached(1) memcat(1) memcp(1) memflush(1) memrm(1) memslap(1) memstat(1) memcached_fetch(3) memcached_replace(3) memcached_server_list_free(3) libmemcached_examples(3) memcached_free(3) memcached_server_add(3) memcached_server_push(3) memcached_add(3) memcached_get(3) memcached_server_count(3) memcached_servers_parse(3) memcached_create(3) memcached_increment(3) memcached_server_list(3) memcached_set(3) memcached_decrement(3) memcached_mget(3) memcached_server_list_append(3) memcached_strerror(3) memcached_delete(3) memcached_quit(3) memcached_server_list_count(3) memcached_verbosity(3)

=cut

