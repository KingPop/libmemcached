=head1 NAME

libmemcached - Client library for memcached

=head1 LIBRARY

C Client Library for memcached (libmemcached, -lmemcached)

=head1 SYNOPSIS

  #include <memcached.h>

=head1 DESCRIPTION

"Memcached is a high-performance, distributed memory object caching
system, generic in nature, but intended for use in speeding up dynamic web
applications by alleviating database load." L<http://danga.com/memcached/>

B<libmemcached> is a small, thread-safe client library for the
memcached protocol. The code has all been written with an eye to allow
for both web and embedded usage. It handles the work behind routing
particular keys to specific servers that you specify (and values are
matched based on server order as supplied by you).

The aim is to support multiple routing and hashing methods. Currently only
two hashing methods are supported, a quick built-in routine, and MD5. For
routing, a simple modulus method is currently used.

All operations are performed against a C<memcached_st> structure.
These structures can either be dynamically allocated or statically
allocated and then initialized by memcached_create(). Functions have been
written in order to encapsulate the C<memcached_st>. It is not
recommended that you operate directly against the structure.

Nearly all functions return a C<memcached_return> value.
This value can be translated to a printable string with memcached_strerr(3).

C<memcached_st> structures are thread-safe, but each thread must
contain its own structure (that is, if you want to share these among
threads you must provide your own locking). No global variables are
used in this library.

Some features of the library must be enabled through memcached_behavior_set(). 
Hope you enjoy it!

=head1 HOME

To find out more information please check:
L<http://tangent.org/552/libmemcached.html>

=head1 AUTHOR

Brian Aker, E<lt>brian@tangent.orgE<gt>

=head1 SEE ALSO

memcached(1) libmemcached_examples(3) libmemcached(1) memcat(1) memcp(1) memflush(1) memrm(1) memslap(1) memstat(1) memcached_fetch(3) memcached_replace(3) memcached_server_list_free(3) libmemcached_examples(3) memcached_free(3) memcached_server_add(3) memcached_server_push(3) memcached_add(3) memcached_get(3) memcached_server_count(3) memcached_servers_parse(3) memcached_create(3) memcached_increment(3) memcached_server_list(3) memcached_set(3) memcached_decrement(3) memcached_mget(3) memcached_server_list_append(3) memcached_strerror(3) memcached_delete(3) memcached_quit(3) memcached_server_list_count(3) memcached_verbosity(3)

=cut

